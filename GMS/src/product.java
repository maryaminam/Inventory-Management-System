/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Zainab
 */
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class product extends javax.swing.JFrame {

    /**
     * Creates new form product
     */
    Connection conn = null;
    ResultSet rs;
    PreparedStatement pst;
    public product() {
        super("Product");
        initComponents();
        
        // Create a custom header renderer
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(new java.awt.Color(0, 128, 108));  // Set the background color
        headerRenderer.setForeground(new java.awt.Color(210, 227, 195));  // Set the text color

        // Apply the custom renderer to the JTableHeader
        jTable1.getTableHeader().setDefaultRenderer(headerRenderer);
        
        conn = databaseconnection.connection();
        showRecord();
    }
    
    public void reset(){
            prod_id.setText("");
            prod_name.setText("");
            prod_price.setText("");
            prod_quantity.setText("");
            prod_group.setSelectedItem("Food");
    }
    
    public void showRecord(){
    try {
        String sql = "SELECT * FROM product";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        ResultSet rs = pstmt.executeQuery();

        DefaultTableModel tm = (DefaultTableModel) jTable1.getModel();
        tm.setRowCount(0);

        while (rs.next()) {
             Object o[] = {rs.getString("prod_id"),rs.getString("prod_name"), rs.getString("prod_price"), rs.getString("prod_quantity"), 
                           rs.getString("prod_group")};
            tm.addRow(o);
        }
    }catch (SQLException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
     }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        prod_id = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        prod_name = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        prod_quantity = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        prod_price = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        prod_group = new javax.swing.JComboBox<>();
        reset = new javax.swing.JButton();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        search = new javax.swing.JButton();
        chart = new javax.swing.JButton();
        inventory = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 128, 108));
        jLabel5.setText("Product ID:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, -1, -1));

        prod_id.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        prod_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prod_idActionPerformed(evt);
            }
        });
        jPanel1.add(prod_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, 230, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 128, 108));
        jLabel6.setText("Product Name:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, -1, -1));

        prod_name.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        prod_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prod_nameActionPerformed(evt);
            }
        });
        jPanel1.add(prod_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 230, 230, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 128, 108));
        jLabel7.setText("Product Quantity:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 330, -1, -1));

        prod_quantity.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        prod_quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prod_quantityActionPerformed(evt);
            }
        });
        jPanel1.add(prod_quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 330, 230, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 128, 108));
        jLabel8.setText("Product Price:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, -1, -1));

        prod_price.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        prod_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prod_priceActionPerformed(evt);
            }
        });
        jPanel1.add(prod_price, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 280, 230, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 128, 108));
        jLabel9.setText("Product Group:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, -1, 40));

        prod_group.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        prod_group.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Food", "Non-Food", "Textile" }));
        prod_group.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prod_groupActionPerformed(evt);
            }
        });
        jPanel1.add(prod_group, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 380, -1, -1));

        reset.setBackground(new java.awt.Color(0, 128, 108));
        reset.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        reset.setForeground(new java.awt.Color(255, 255, 255));
        reset.setText("CLEAR");
        reset.setBorder(null);
        reset.setBorderPainted(false);
        reset.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        jPanel1.add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 430, 100, 30));

        add.setBackground(new java.awt.Color(0, 128, 108));
        add.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("ADD");
        add.setBorder(null);
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel1.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 430, 100, 30));

        update.setBackground(new java.awt.Color(0, 128, 108));
        update.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("UPDATE");
        update.setBorder(null);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel1.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 430, 100, 30));

        delete.setBackground(new java.awt.Color(0, 128, 108));
        delete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("DELETE");
        delete.setBorder(null);
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel1.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 430, 100, 30));

        search.setBackground(new java.awt.Color(0, 128, 108));
        search.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        search.setForeground(new java.awt.Color(255, 255, 255));
        search.setText("SEARCH");
        search.setBorder(null);
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        jPanel1.add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 180, 100, 30));

        chart.setBackground(new java.awt.Color(0, 128, 108));
        chart.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        chart.setForeground(new java.awt.Color(255, 255, 255));
        chart.setText("CHART");
        chart.setBorder(null);
        chart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chartActionPerformed(evt);
            }
        });
        jPanel1.add(chart, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 430, 110, 30));

        inventory.setBackground(new java.awt.Color(0, 128, 108));
        inventory.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        inventory.setForeground(new java.awt.Color(255, 255, 255));
        inventory.setText("INVENTORY");
        inventory.setBorder(null);
        inventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryActionPerformed(evt);
            }
        });
        jPanel1.add(inventory, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 430, 110, 30));

        jScrollPane1.setBackground(new java.awt.Color(0, 128, 108));
        jScrollPane1.setForeground(new java.awt.Color(0, 128, 108));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBackground(new java.awt.Color(210, 227, 195));
        jTable1.setFont(new java.awt.Font("Dialog", 0, 13)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 128, 108));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Prod ID", "Prod Name", "Prod Price", "Prod Quantity", "Prod Group"
            }
        ));
        jTable1.setFillsViewportHeight(true);
        jTable1.setGridColor(new java.awt.Color(0, 128, 108));
        jTable1.setSelectionBackground(new java.awt.Color(0, 128, 108));
        jTable1.setSelectionForeground(new java.awt.Color(210, 227, 195));
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 480, 640, 250));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/productbg.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jMenuBar1.setBackground(new java.awt.Color(210, 227, 195));
        jMenuBar1.setForeground(new java.awt.Color(0, 128, 108));

        jMenu1.setBackground(new java.awt.Color(210, 227, 195));
        jMenu1.setForeground(new java.awt.Color(0, 128, 108));
        jMenu1.setText("Home");

        jMenuItem1.setBackground(new java.awt.Color(210, 227, 195));
        jMenuItem1.setForeground(new java.awt.Color(0, 128, 108));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/homeicon.png"))); // NOI18N
        jMenuItem1.setText("Home");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void prod_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prod_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prod_idActionPerformed

    private void prod_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prod_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prod_nameActionPerformed

    private void prod_quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prod_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prod_quantityActionPerformed

    private void prod_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prod_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prod_priceActionPerformed

    private void prod_groupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prod_groupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prod_groupActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        reset();
        showRecord();
    }//GEN-LAST:event_resetActionPerformed
    private boolean isProductIdExists(int prod_id) {

            try {
                pst = conn.prepareStatement("SELECT * FROM product WHERE prod_id = ?");
                pst.setInt(1, prod_id);
                ResultSet rs = pst.executeQuery();
                return rs.next();  // Returns true if a record is found
            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                return false;
            }
    }
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
                                 
        // TODO add your handling code here:
        int id = Integer.parseInt(prod_id.getText());
        if (isProductIdExists(id)) {
            JOptionPane.showMessageDialog(this, "Product with ID " + id + " already exists.", "Duplicate Entry", JOptionPane.ERROR_MESSAGE);
            prod_id.setText("");
            return;  // Exit the method to avoid further processing
        }
        try {
            pst = conn.prepareStatement("INSERT INTO product(prod_id, prod_name, prod_price, prod_quantity, prod_group) VALUES (?,?,?,?,?)");
            pst.setInt(1, id);
            pst.setString(2, prod_name.getText());
            // Check if the price is provided before setting it in the prepared statement
            if (!prod_price.getText().isEmpty()) {
                pst.setDouble(3, Double.parseDouble(prod_price.getText()));
            } else {
                pst.setNull(3, Types.DOUBLE);
            }

            // Check if the quantity is provided before setting it in the prepared statement
            if (!prod_quantity.getText().isEmpty()) {
                pst.setInt(4, Integer.parseInt(prod_quantity.getText()));
            } else {
                pst.setNull(4, Types.INTEGER);
            }
            pst.setString(5, prod_group.getSelectedItem().toString());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data is successfully inserted.");
            reset();
            showRecord();
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid input. Please enter valid numbers for Price and Quantity.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
         try {
            int id = Integer.parseInt(prod_id.getText());
            // Check if values are not null before setting them in the prepared statement
            if (!prod_name.getText().isEmpty()) {
                pst = conn.prepareStatement("UPDATE product SET prod_name=?, prod_price=?, prod_quantity=?, prod_group=? WHERE prod_id=?");
                pst.setString(1, prod_name.getText());

                // Check if the price is provided before setting it in the prepared statement
                if (!prod_price.getText().isEmpty()) {
                    pst.setDouble(2, Double.parseDouble(prod_price.getText()));
                } else {
                    pst.setNull(2, Types.DOUBLE);
                }

                // Check if the quantity is provided before setting it in the prepared statement
                if (!prod_quantity.getText().isEmpty()) {
                    pst.setInt(3, Integer.parseInt(prod_quantity.getText()));
                } else {
                    pst.setNull(3, Types.INTEGER);
                }

                pst.setString(4, prod_group.getSelectedItem().toString());
                pst.setInt(5, id);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data is successfully updated.");
                reset();
                showRecord();
            } else {
                JOptionPane.showMessageDialog(this, "Product Name is required.", "Missing Information", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException | NumberFormatException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        try {
            int id = Integer.parseInt(prod_id.getText());
            
        // Create the SQL DELETE statement with the WHERE clause to specify the prod_id
        String deleteSQL = "DELETE FROM product WHERE prod_id = ?";

        try (PreparedStatement preparedStatement = conn.prepareStatement(deleteSQL)) {
            // Set the prod_id in the prepared statement
            preparedStatement.setInt(1, id);

            // Execute the DELETE statement
            int rowsAffected = preparedStatement.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Product deleted successfully.");
                reset(); // Optionally reset the UI components after successful deletion
                showRecord(); // Optionally refresh the table after deletion
            } else {
                JOptionPane.showMessageDialog(this, "Product not found or could not be deleted.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Invalid Product ID. Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "SQL Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        try {
            Statement stmt = conn.createStatement();
            int productId;
            try {
                productId = Integer.parseInt(prod_id.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Invalid Product ID. Please enter a valid number.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                prod_id.setText("");
                return;
            }

            String sql = "SELECT * FROM product WHERE prod_id = " + productId;
            ResultSet rs = stmt.executeQuery(sql);

            if (rs.next()) {
                prod_name.setText(rs.getString("prod_name"));

                // Check if the column is not null before setting the text
                if (rs.getObject("prod_price") != null) {
                    prod_price.setText(rs.getString("prod_price"));
                } else {
                    prod_price.setText("");
                }

                // Check if the column is not null before setting the text
                if (rs.getObject("prod_quantity") != null) {
                    prod_quantity.setText(rs.getString("prod_quantity"));
                } else {
                    prod_quantity.setText("");
                }

                prod_group.setSelectedItem(rs.getString("prod_group"));
            } else {
                JOptionPane.showMessageDialog(null, "Record Not Found");
            }
        } catch (SQLException ex) {
            Logger.getLogger(product.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
        String sql = "SELECT * FROM product WHERE prod_id = ?";
        PreparedStatement pstmt = conn.prepareStatement(sql);
        pstmt.setString(1, prod_id.getText());
        ResultSet rs = pstmt.executeQuery();

        DefaultTableModel tm = (DefaultTableModel) jTable1.getModel();

        tm.setRowCount(0);

        while (rs.next()) {
            Object o[] = {rs.getString("prod_id"),rs.getString("prod_name"), rs.getString("prod_price"), rs.getString("prod_quantity"), 
                           rs.getString("prod_group")};
            tm.addRow(o);
        }
    } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }  
    }//GEN-LAST:event_searchActionPerformed

    private void inventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        inventory obj = new inventory();
        obj.setVisible(true);
    }//GEN-LAST:event_inventoryActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        //TODO add your handling code here:
        setVisible(false);
        home obj = new home();
        obj.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void chartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chartActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        product_chart obj = new product_chart();
        obj.setVisible(true);
    }//GEN-LAST:event_chartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new product().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton chart;
    private javax.swing.JButton delete;
    private javax.swing.JButton inventory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> prod_group;
    private javax.swing.JTextField prod_id;
    private javax.swing.JTextField prod_name;
    private javax.swing.JTextField prod_price;
    private javax.swing.JTextField prod_quantity;
    private javax.swing.JButton reset;
    private javax.swing.JButton search;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
