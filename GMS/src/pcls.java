
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UnsupportedLookAndFeelException;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author DELL
 */
public class pcls extends javax.swing.JFrame {
    
    Connection con = null;
    ResultSet rs;
    PreparedStatement pst;
    public void reset(){
            pcl_no.setText("");
            date.setText("");
            created_by.setText("");
            date_effect.setText("");
            product_ID.setText("");
            status.setSelectedItem("");
            rate.setText("");   
            last_rate.setText("");           
    }
    public pcls() {
        super("PCls");
        try {
            initComponents();
            con = databaseconnection.connection();
            
            
            connect();
        } catch (ClassNotFoundException | SQLException ex) {
            java.util.logging.Logger.getLogger(supplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }
    public void connect() throws ClassNotFoundException, SQLException{
        
        pst=con.prepareStatement("Select * from PCls");
        rs=pst.executeQuery();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        pcl_no = new javax.swing.JTextField();
        date = new javax.swing.JTextField();
        created_by = new javax.swing.JTextField();
        date_effect = new javax.swing.JTextField();
        rate = new javax.swing.JTextField();
        last_rate = new javax.swing.JTextField();
        status = new javax.swing.JComboBox<>();
        save = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        product_ID = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 128, 108));
        jLabel1.setText("PCL no.:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, 70, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 128, 108));
        jLabel2.setText("Date:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 160, 37, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 128, 108));
        jLabel3.setText("Created by:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, 80, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 128, 108));
        jLabel5.setText("Date of effect:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 250, 100, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 128, 108));
        jLabel6.setText("Status:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 330, 60, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 128, 108));
        jLabel7.setText("Onhand Rate:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 380, 100, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 128, 108));
        jLabel9.setText("Last rate:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 420, 70, -1));

        pcl_no.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(pcl_no, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 120, 270, -1));

        date.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 160, 270, -1));

        created_by.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(created_by, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 200, 270, -1));

        date_effect.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(date_effect, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 250, 219, -1));

        rate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(rate, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 370, 180, -1));

        last_rate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        last_rate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                last_rateActionPerformed(evt);
            }
        });
        getContentPane().add(last_rate, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 420, 180, -1));

        status.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        status.setForeground(new java.awt.Color(255, 255, 255));
        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "pending", "approved", "denied" }));
        status.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusActionPerformed(evt);
            }
        });
        getContentPane().add(status, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 330, 120, -1));

        save.setBackground(new java.awt.Color(0, 128, 108));
        save.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        save.setForeground(new java.awt.Color(255, 255, 255));
        save.setText("save");
        save.setBorder(null);
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        getContentPane().add(save, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 510, 80, 30));

        delete.setBackground(new java.awt.Color(0, 128, 108));
        delete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("delete");
        delete.setBorder(null);
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 510, 90, 30));

        edit.setBackground(new java.awt.Color(0, 128, 108));
        edit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        edit.setForeground(new java.awt.Color(255, 255, 255));
        edit.setText("edit");
        edit.setBorder(null);
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        getContentPane().add(edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 510, 90, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 128, 108));
        jLabel8.setText("Product ID:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, 90, -1));

        product_ID.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        getContentPane().add(product_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 290, 230, -1));

        search.setBackground(new java.awt.Color(0, 128, 108));
        search.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        search.setForeground(new java.awt.Color(255, 255, 255));
        search.setText("search");
        search.setBorder(null);
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 510, 90, 30));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pclss.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 790));

        jMenuBar1.setBackground(new java.awt.Color(210, 227, 195));
        jMenuBar1.setForeground(new java.awt.Color(0, 128, 108));

        jMenu1.setBackground(new java.awt.Color(210, 227, 195));
        jMenu1.setForeground(new java.awt.Color(0, 128, 108));
        jMenu1.setText("Home");

        jMenuItem1.setBackground(new java.awt.Color(210, 227, 195));
        jMenuItem1.setForeground(new java.awt.Color(0, 128, 108));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/homeicon.png"))); // NOI18N
        jMenuItem1.setText("Home");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
    String statusValue = (String) status.getSelectedItem();

    // Check if values are not null before setting them in the prepared statement
    if (statusValue != null) {
        try {
            // Your existing code for preparing the statement
            int productId = Integer.parseInt(product_ID.getText());

            // Check if the product_Id exists in the products table
            if (!isProductExists(productId)) {
                JOptionPane.showMessageDialog(this, "Invalid product_Id. The specified product does not exist.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                // Optionally, you can clear the product_ID field or take other corrective actions
                product_ID.setText("");
                return;  // Exit the method to avoid further processing
            }

            pst = con.prepareStatement("UPDATE PCls SET p_date=?, created_by=?, date_effect=?, prod_id=?, p_status=?, onhand_rate=?, last_rate=? WHERE pcl_no=?");

            // Validate and handle date
            try {
                pst.setDate(1, java.sql.Date.valueOf(date.getText()));  // Assuming date is in the format "yyyy-MM-dd"
            } catch (IllegalArgumentException e) {
                JOptionPane.showMessageDialog(this, "Invalid date format. Please enter the date in the format yyyy-MM-dd.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                // Optionally, you can clear the date field or take other corrective actions
                date.setText("");
                return;  // Exit the method to avoid further processing
            }

            pst.setString(2, created_by.getText());

            // Validate and handle date_effect
            try {
                pst.setDate(3, java.sql.Date.valueOf(date_effect.getText()));  // Assuming date_effect is in the format "yyyy-MM-dd"
            } catch (IllegalArgumentException e) {
                JOptionPane.showMessageDialog(this, "Invalid date format for 'Date of Effect'. Please enter the date in the format yyyy-MM-dd.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                // Optionally, you can clear the date_effect field or take other corrective actions
                date_effect.setText("");  // Reset other fields as well
                return;  // Exit the method to avoid further processing
            }

            pst.setInt(4, productId);  // Use the parsed prod_id
            pst.setString(5, statusValue);
            pst.setDouble(6, Double.parseDouble(rate.getText()));  // Assuming rate is a double
            pst.setDouble(7, Double.parseDouble(last_rate.getText()));  // Assuming last_rate is a double
            pst.setString(8, pcl_no.getText());

            // Your existing code for executing the update
            pst.executeUpdate();

            JOptionPane.showMessageDialog(this, "Update successful");

            // Your existing code for resetting fields
            reset();
        } catch (SQLException ex) {
            Logger.getLogger(pcls.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid product_Id. Please enter a valid integer.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            // Optionally, you can clear the product_ID field or take other corrective actions
            product_ID.setText("");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Status is null");
    }
    }//GEN-LAST:event_editActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed

        try {
            // TODO add your handling code here:
            pst=con.prepareStatement("delete from PCls where pcl_no=?");
            pst.setString(1,pcl_no.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this,"success");

            reset();
        } catch (SQLException ex) { 
            Logger.getLogger(pcls.class.getName()).log(Level.SEVERE, null, ex);
        }
 
    }//GEN-LAST:event_deleteActionPerformed

private boolean isProductExists(int productId) throws SQLException {
    String query = "SELECT COUNT(*) FROM product WHERE prod_id = ?";
    try (PreparedStatement statement = con.prepareStatement(query)) {
        statement.setInt(1, productId);
        try (ResultSet resultSet = statement.executeQuery()) {
            resultSet.next();
            int count = resultSet.getInt(1);
            return count > 0;
        }
    }
}
private boolean isPclNoExists(int pclNo) throws SQLException {
    String query = "SELECT COUNT(*) FROM PCls WHERE pcl_no = ?";
    try (PreparedStatement preparedStatement = con.prepareStatement(query)) {
        preparedStatement.setInt(1, pclNo);
        ResultSet resultSet = preparedStatement.executeQuery();
        resultSet.next();
        int count = resultSet.getInt(1);
        return count > 0;
    }
}
    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        try {
           // Your existing code for preparing the statement
           int prod_id = Integer.parseInt(product_ID.getText());

           // Check if the product_Id exists in the products table
           if (!isProductExists(prod_id)) {
               JOptionPane.showMessageDialog(this, "Invalid product_Id. The specified product does not exist.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
               // Optionally, you can clear the product_ID field or take other corrective actions
               product_ID.setText("");
               return;  // Exit the method to avoid further processing
           }
        int pclNo = Integer.parseInt(pcl_no.getText());

        // Check if pcl_no already exists
        if (isPclNoExists(pclNo)) {
            JOptionPane.showMessageDialog(this, "Record with pcl number " + pclNo + " already exists.", "Duplicate Entry", JOptionPane.ERROR_MESSAGE);
            pcl_no.setText("");
            return;  // Exit the method to avoid further processing
        }
        
           pst = con.prepareStatement("insert into PCls(pcl_no,p_date,created_by,date_effect,prod_id,p_status,onhand_rate,last_rate)values(?,?,?,?,?,?,?,?)");
           pst.setInt(1, pclNo);

                   // Validate and handle date
                   try {
                       pst.setDate(2, java.sql.Date.valueOf(date.getText()));  // Assuming date is in the format "yyyy-MM-dd"
                   } catch (IllegalArgumentException e) {
                       JOptionPane.showMessageDialog(this, "Invalid date format. Please enter the date in the format yyyy-MM-dd.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                       // Optionally, you can clear the date field or take other corrective actions
                       date.setText("");
                       return;  // Exit the method to avoid further processing
                   }

                   pst.setString(3, created_by.getText());

                   // Validate and handle date_effect
                   try {
                       pst.setDate(4, java.sql.Date.valueOf(date_effect.getText()));  // Assuming date_effect is in the format "yyyy-MM-dd"
                   } catch (IllegalArgumentException e) {
                       JOptionPane.showMessageDialog(this, "Invalid date format for 'Date of Effect'. Please enter the date in the format yyyy-MM-dd.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                       // Optionally, you can clear the date_effect field or take other corrective actions
                       date_effect.setText("");  // Reset other fields as well
                       return;  // Exit the method to avoid further processing
                   }

                   pst.setInt(5, Integer.parseInt(product_ID.getText()));  // Assuming product_ID is an integer
                   pst.setString(6, status.getSelectedItem().toString());
                   pst.setDouble(7, Double.parseDouble(rate.getText()));  // Assuming rate is a double
                   pst.setDouble(8, Double.parseDouble(last_rate.getText()));  // Assuming last_rate is a double

                   // Your existing code for executing the update
                   pst.executeUpdate();

                   JOptionPane.showMessageDialog(this, "Success");
           // Your existing code for resetting fields
           reset();
       } catch (SQLException ex) {
           Logger.getLogger(pcls.class.getName()).log(Level.SEVERE, null, ex);
       } catch (NumberFormatException e) {
           JOptionPane.showMessageDialog(this, "Invalid product_Id. Please enter a valid integer.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
           // Optionally, you can clear the product_ID field or take other corrective actions
           product_ID.setText("");
       }
    }//GEN-LAST:event_saveActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        
        try {
            String s=JOptionPane.showInputDialog(this,"Enter pcl number for search:");
            pst=con.prepareStatement("select * from PCls where pcl_no=?");
            pst.setString(1,s);
            rs= pst.executeQuery();
            if (rs.next()){
            pcl_no.setText(rs.getString(1));
            date.setText(rs.getString(2));
            created_by.setText(rs.getString(3));
            date_effect.setText(rs.getString(4));
            product_ID.setText(rs.getString(5));
            status.setSelectedItem(rs.getString(6));
            rate.setText(rs.getString(7));   
            last_rate.setText(rs.getString(8));                
            }
            else{
                JOptionPane.showMessageDialog(null, "No record found :(");
            }
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(supplier.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchActionPerformed

    private void statusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusActionPerformed

    private void last_rateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_last_rateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_last_rateActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        //TODO add your handling code here:
        setVisible(false);
        home obj = new home();
        obj.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pcls.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pcls.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pcls.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pcls.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    try {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                        Logger.getLogger(pcls.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new pcls().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField created_by;
    private javax.swing.JTextField date;
    private javax.swing.JTextField date_effect;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JTextField last_rate;
    private javax.swing.JTextField pcl_no;
    private javax.swing.JTextField product_ID;
    private javax.swing.JTextField rate;
    private javax.swing.JButton save;
    private javax.swing.JButton search;
    private javax.swing.JComboBox<String> status;
    // End of variables declaration//GEN-END:variables
}
