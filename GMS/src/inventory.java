/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class inventory extends javax.swing.JFrame {
    /**
     * Creates new form inventory
     */
    Connection conn = null;
    public inventory() {
        super("Inventory");
        initComponents();
        
        // Create a custom header renderer
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(new java.awt.Color(0, 128, 108));  // Set the background color
        headerRenderer.setForeground(new java.awt.Color(210, 227, 195));  // Set the text color

        // Apply the custom renderer to the JTableHeader
        jTable1.getTableHeader().setDefaultRenderer(headerRenderer);
        
        conn = databaseconnection.connection();
    table_view();
    divide_quantity();
    }
    
    void table_view(){
            try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String sql ="select I.prod_id,P.prod_name,I.Quantaisle,I.Quantstore from inventory as I JOIN product as P on P.prod_id=I.prod_id";
            PreparedStatement ptst=conn.prepareCall(sql);
            ResultSet rs= ptst.executeQuery();
            DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
            tm.setRowCount(0);
               while(rs.next()){
               Object o[]={rs.getString("prod_id"),rs.getString("prod_name"),rs.getString("Quantaisle"),rs.getString("Quantstore")};
               tm.addRow(o);        
               } 
        }
        catch(Exception e){
              JOptionPane.showMessageDialog(null,e);  
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBackground(new java.awt.Color(210, 227, 195));
        jTable1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 128, 108));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Product ID", "Poduct Name", "Quantity on aisle", "Quantity in storage"
            }
        ));
        jTable1.setFillsViewportHeight(true);
        jTable1.setFocusable(false);
        jTable1.setSelectionBackground(new java.awt.Color(178, 75, 130));
        jTable1.setSelectionForeground(new java.awt.Color(43, 75, 130));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, 790, 410));
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 570, 300, 50));

        jButton1.setBackground(new java.awt.Color(0, 128, 108));
        jButton1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("SEARCH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 570, 100, 50));

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Enter Product ID to Search and Restock");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 630, 220, -1));

        jButton2.setBackground(new java.awt.Color(0, 128, 108));
        jButton2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("RESTOCK");
        jButton2.setBorder(null);
        jButton2.setBorderPainted(false);
        jButton2.setFocusPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 500, 100, 30));

        jButton3.setBackground(new java.awt.Color(0, 128, 108));
        jButton3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Restock ALL");
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 130, 90, 30));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 670));

        jMenuBar1.setBackground(new java.awt.Color(210, 227, 195));
        jMenuBar1.setForeground(new java.awt.Color(0, 128, 108));

        jMenu1.setBackground(new java.awt.Color(210, 227, 195));
        jMenu1.setForeground(new java.awt.Color(0, 128, 108));
        jMenu1.setText("Back");

        jMenuItem1.setBackground(new java.awt.Color(210, 227, 195));
        jMenuItem1.setForeground(new java.awt.Color(0, 128, 108));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backicon.png"))); // NOI18N
        jMenuItem1.setText("Back");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    void divide_quantity(){
        try {
            String sql ="Select * from inventory";
            PreparedStatement ptst=conn.prepareCall(sql);
            ResultSet rs= ptst.executeQuery();
               while(rs.next()){
                   if(rs.getDouble("Quantaisle")==0&&rs.getDouble("Quantstore")==0){
                   int prodID = rs.getInt("prod_id");
                   String sql1 ="select P.prod_quantity from product as P JOIN inventory as I on P.prod_id="+prodID;
                   PreparedStatement ptst1=conn.prepareCall(sql1);
                   ResultSet rs1= ptst1.executeQuery();
                if(rs1.next()){
                   int Quantity = rs1.getInt("prod_quantity");
                   int Quant_on_aisle= 100;
                   int Quant_in_storage = Quantity-Quant_on_aisle;
                   String sql2 ="Update inventory SET Quantaisle='"+Quant_on_aisle+"',Quantstore='"+Quant_in_storage+"'WHERE prod_id='"+prodID+"'";
                    PreparedStatement ptst2=conn.prepareCall(sql2); 
                    ptst2.execute();
                }
                }
               } 
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,ex); 
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
            String prodID=jTextField1.getText();
        try{                                                                              
            if (prodID.equals("")) {
                JOptionPane.showMessageDialog( this, "Please enter ID","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            else {
            String sql1 ="select I.prod_id,P.prod_name,I.Quantaisle,I.Quantstore from inventory as I JOIN product as P on P.prod_id=I.prod_id where I.prod_id = "+prodID;
            PreparedStatement ptst=conn.prepareCall(sql1);
            ResultSet rs= ptst.executeQuery();
            DefaultTableModel tm=(DefaultTableModel)jTable1.getModel();
            tm.setRowCount(0);
               while(rs.next()){
               Object o[]={rs.getString("prod_id"),rs.getString("prod_name"),rs.getString("Quantaisle"),rs.getString("Quantstore")};
               tm.addRow(o);        
               } 
            }
            
        }
        catch(Exception e){
           JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String prodID=jTextField1.getText();
                try{                                                                              
            if (prodID.equals("")) {
                JOptionPane.showMessageDialog( this, "Please enter ID","Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            else {
            String sql ="select * from inventory WHERE prod_id ='"+prodID+"'";
            PreparedStatement ptst=conn.prepareCall(sql);
            ResultSet rs= ptst.executeQuery();
            if(rs.next()){
                int current_aisle = rs.getInt("Quantaisle");
                int current_storage = rs.getInt("Quantstore");
            if(current_aisle<100){
            if(current_storage>=100){
                   int Quant_on_aisle= 100;
                   int diff = 100-current_aisle;
                   int Quant_in_storage = current_storage-diff;
                   String sql2 ="Update inventory SET Quantaisle ='"+Quant_on_aisle+"',Quantstore='"+Quant_in_storage+"'WHERE prod_id='"+rs.getInt("prod_id")+"'";
                   PreparedStatement ptst2=conn.prepareCall(sql2); 
                   ptst2.execute();
            }
            else if(current_storage<100&&current_storage>0){
                   int Quant_on_aisle =  rs.getInt("Quantstore")+rs.getInt("Quantaisle");
                   int Quant_in_storage = 0;
                   if(Quant_on_aisle>100){
                         Quant_in_storage =Quant_on_aisle-100;
                         Quant_on_aisle = 100;
                   }
                   String sql2 ="Update inventory SET Quantaisle='"+Quant_on_aisle+"',Quantstore='"+Quant_in_storage+"'WHERE prod_id='"+rs.getInt("prod_id")+"'";
                   PreparedStatement ptst2=conn.prepareCall(sql2); 
                   ptst2.execute();
                  if(Quant_in_storage==0){
                JOptionPane.showMessageDialog(null, "STOCK IN STORAGE IS EMPTY FOR PRODUCT ID "+rs.getInt("prod_id"));
            }
            }
            else{
            JOptionPane.showMessageDialog(null, "STOCK IN STORAGE IS EMPTY FOR PRODUCT ID "+rs.getInt("prod_id"));
            }
            table_view();
            }
            }
            else{
            JOptionPane.showMessageDialog(null, "PRODUCT ID NOT FOUND");
            }
            }
            
        }
        catch(Exception e){
           JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
                        try{                                                                              
            String sql ="select * from inventory";
            PreparedStatement ptst=conn.prepareCall(sql);
            ResultSet rs= ptst.executeQuery();
            while(rs.next()){
                int current_aisle = rs.getInt("Quantaisle");
                int current_storage = rs.getInt("Quantstore");
            if(current_aisle<100){
            if(current_storage>=100){
                   int Quant_on_aisle= 100;
                   int diff = 100-current_aisle;
                   int Quant_in_storage = current_storage-diff;
                   String sql2 ="Update inventory SET Quantaisle='"+Quant_on_aisle+"',Quantstore='"+Quant_in_storage+"'WHERE prod_id='"+rs.getInt("prod_id")+"'";
                   PreparedStatement ptst2=conn.prepareCall(sql2); 
                   ptst2.execute();
            }
            else if(current_storage<100&&current_storage>0){
                   int Quant_on_aisle =  rs.getInt("Quantstore")+rs.getInt("Quantaisle");
                   int Quant_in_storage = 0;
                   if(Quant_on_aisle>100){
                         Quant_in_storage =Quant_on_aisle-100;
                         Quant_on_aisle = 100;
                   }
                   String sql2 ="Update inventory SET Quantaisle='"+Quant_on_aisle+"',Quantstore='"+Quant_in_storage+"'WHERE prod_id='"+rs.getInt("prod_id")+"'";
                   PreparedStatement ptst2=conn.prepareCall(sql2); 
                   ptst2.execute();
                  if(Quant_in_storage==0){
                JOptionPane.showMessageDialog(null, "STOCK IN STORAGE IS EMPTY FOR PRODUCT ID "+rs.getInt("prod_id"));
            }
            }
            else{
            JOptionPane.showMessageDialog(null, "STOCK IN STORAGE IS EMPTY FOR PRODUCT ID "+rs.getInt("prod_id"));
            }
            table_view();
            }
            }
        }
        catch(Exception e){
           JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        //TODO add your handling code here:
        setVisible(false);
        product obj = new product();
        obj.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
